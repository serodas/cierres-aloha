<?php

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;

// This file has been auto-generated by the Symfony Dependency Injection Component for internal use.
// Returns the public 'doctrine.dbal.sql_connection' shared service.

$a = new \Doctrine\DBAL\Configuration();

$b = new \Doctrine\DBAL\Logging\LoggerChain();
$b->addLogger(${($_ = isset($this->services['doctrine.dbal.logger']) ? $this->services['doctrine.dbal.logger'] : $this->load('getDoctrine_Dbal_LoggerService.php')) && false ?: '_'});
$b->addLogger(${($_ = isset($this->services['doctrine.dbal.logger.profiling.sql']) ? $this->services['doctrine.dbal.logger.profiling.sql'] : ($this->services['doctrine.dbal.logger.profiling.sql'] = new \Doctrine\DBAL\Logging\DebugStack())) && false ?: '_'});

$a->setSQLLogger($b);
$c = new \Symfony\Bridge\Doctrine\ContainerAwareEventManager($this);
$c->addEventListener([0 => 'loadClassMetadata'], ${($_ = isset($this->services['doctrine.orm.sql_listeners.attach_entity_listeners']) ? $this->services['doctrine.orm.sql_listeners.attach_entity_listeners'] : ($this->services['doctrine.orm.sql_listeners.attach_entity_listeners'] = new \Doctrine\ORM\Tools\AttachEntityListenersListener())) && false ?: '_'});

return $this->services['doctrine.dbal.sql_connection'] = ${($_ = isset($this->services['doctrine.dbal.connection_factory']) ? $this->services['doctrine.dbal.connection_factory'] : ($this->services['doctrine.dbal.connection_factory'] = new \Doctrine\Bundle\DoctrineBundle\ConnectionFactory([]))) && false ?: '_'}->createConnection(['driver' => 'pdo_sqlsrv', 'host' => '192.168.6.230', 'port' => 1433, 'dbname' => NULL, 'user' => 'interfase_user', 'password' => '1nt3rf4s3us3r', 'charset' => 'UTF8', 'driverOptions' => [], 'defaultTableOptions' => []], $a, $c, []);

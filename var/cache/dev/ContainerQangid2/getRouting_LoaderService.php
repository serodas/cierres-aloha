<?php

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;

// This file has been auto-generated by the Symfony Dependency Injection Component for internal use.
// Returns the public 'routing.loader' shared service.

$a = ${($_ = isset($this->services['controller_name_converter']) ? $this->services['controller_name_converter'] : ($this->services['controller_name_converter'] = new \Symfony\Bundle\FrameworkBundle\Controller\ControllerNameParser(${($_ = isset($this->services['kernel']) ? $this->services['kernel'] : $this->get('kernel', 1)) && false ?: '_'}))) && false ?: '_'};
$b = new \Symfony\Component\Config\Loader\LoaderResolver();

$c = ${($_ = isset($this->services['file_locator']) ? $this->services['file_locator'] : ($this->services['file_locator'] = new \Symfony\Component\HttpKernel\Config\FileLocator(${($_ = isset($this->services['kernel']) ? $this->services['kernel'] : $this->get('kernel', 1)) && false ?: '_'}, ($this->targetDirs[3].'/app/Resources'), [0 => ($this->targetDirs[3].'/app')]))) && false ?: '_'};
$d = ${($_ = isset($this->services['annotation_reader']) ? $this->services['annotation_reader'] : $this->getAnnotationReaderService()) && false ?: '_'};

$e = new \Sensio\Bundle\FrameworkExtraBundle\Routing\AnnotatedRouteControllerLoader($d);
$f = new \FOS\RestBundle\Routing\Loader\RestRouteProcessor();
$g = new \Symfony\Bundle\FrameworkBundle\Routing\AnnotatedRouteControllerLoader($d);

$b->addLoader(new \Symfony\Component\Routing\Loader\XmlFileLoader($c));
$b->addLoader(new \Symfony\Component\Routing\Loader\YamlFileLoader($c));
$b->addLoader(new \Symfony\Component\Routing\Loader\PhpFileLoader($c));
$b->addLoader(new \Symfony\Component\Routing\Loader\GlobFileLoader($c));
$b->addLoader(new \Symfony\Component\Routing\Loader\DirectoryLoader($c));
$b->addLoader(new \Symfony\Component\Routing\Loader\DependencyInjection\ServiceRouterLoader($this));
$b->addLoader($e);
$b->addLoader(new \Symfony\Component\Routing\Loader\AnnotationDirectoryLoader($c, $e));
$b->addLoader(new \Symfony\Component\Routing\Loader\AnnotationFileLoader($c, $e));
$b->addLoader(new \FOS\RestBundle\Routing\Loader\DirectoryRouteLoader($c, $f));
$b->addLoader(new \FOS\RestBundle\Routing\Loader\RestRouteLoader($this, $c, $a, new \FOS\RestBundle\Routing\Loader\Reader\RestControllerReader(new \FOS\RestBundle\Routing\Loader\Reader\RestActionReader($d, ${($_ = isset($this->services['fos_rest.request.param_fetcher.reader']) ? $this->services['fos_rest.request.param_fetcher.reader'] : $this->load('getFosRest_Request_ParamFetcher_ReaderService.php')) && false ?: '_'}, ${($_ = isset($this->services['fos_rest.inflector']) ? $this->services['fos_rest.inflector'] : ($this->services['fos_rest.inflector'] = new \FOS\RestBundle\Inflector\DoctrineInflector())) && false ?: '_'}, false, ['json' => false, 'xml' => false, 'html' => true], true), $d), 'json'));
$b->addLoader(new \FOS\RestBundle\Routing\Loader\RestYamlCollectionLoader($c, $f, false, ['json' => false, 'xml' => false, 'html' => true], 'json'));
$b->addLoader(new \FOS\RestBundle\Routing\Loader\RestXmlCollectionLoader($c, $f, false, ['json' => false, 'xml' => false, 'html' => true], 'json'));
$b->addLoader(new \Symfony\Bundle\AsseticBundle\Routing\AsseticLoader(${($_ = isset($this->services['assetic.asset_manager']) ? $this->services['assetic.asset_manager'] : $this->load('getAssetic_AssetManagerService.php')) && false ?: '_'}, []));
$b->addLoader($g);
$b->addLoader(new \Symfony\Component\Routing\Loader\AnnotationDirectoryLoader($c, $g));
$b->addLoader(new \Symfony\Component\Routing\Loader\AnnotationFileLoader($c, $g));

return $this->services['routing.loader'] = new \Symfony\Bundle\FrameworkBundle\Routing\DelegatingLoader($a, $b);

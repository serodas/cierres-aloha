<?php

use Symfony\Component\Routing\RequestContext;
use Symfony\Component\Routing\Exception\RouteNotFoundException;
use Psr\Log\LoggerInterface;

/**
 * This class has been auto-generated
 * by the Symfony Routing Component.
 */
class appProdProjectContainerUrlGenerator extends Symfony\Component\Routing\Generator\UrlGenerator
{
    private static $declaredRoutes;

    public function __construct(RequestContext $context, LoggerInterface $logger = null)
    {
        $this->context = $context;
        $this->logger = $logger;
        if (null === self::$declaredRoutes) {
            self::$declaredRoutes = [
        'autorizardenominaciones' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'AppBundle\\Controller\\CierreController::autorizarAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/cajero/autorizardenominaciones',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'consultadecajas' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'AppBundle\\Controller\\CierreController::modificarAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/cajero/consultadecajas',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'cierrescondiferencias' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'AppBundle\\Controller\\CierreController::cierresconDiferenciaAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/cajero/cierrescondiferencias',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'consultacaja' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'AppBundle\\Controller\\CierreController::consultarAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/cajero/consultacaja',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'cierreparcialdecaja' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'AppBundle\\Controller\\CierreController::addAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/cajero/cierreparcialdecaja',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'tirilla' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'AppBundle\\Controller\\CierreController::printAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/cajero/tirilla',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'homepage' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'AppBundle\\Controller\\DefaultController::indexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'frmreporte' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'AppBundle\\Controller\\ReporteController::frmReporteAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/reporte/formreporte',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'frmreporte-noefectivas' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'AppBundle\\Controller\\ReporteController::frmReporteFPNoEfectivasAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/reporte/formreportenoefectivas',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'formreportesubsidioenespecie' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'AppBundle\\Controller\\ReporteController::frmReporteSubsidioEnEspecieAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/reporte/formreportesubsidioenespecie',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'formreporte-reservas' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'AppBundle\\Controller\\ReporteController::frmReporteReservasAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/reporte/reportereservas',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'formreporte-micomfamiliar' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'AppBundle\\Controller\\ReporteController::frmReporteMicomfamiliarAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/reporte/reportemicomfamiliar',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'reporte-efectivo' => array (  0 =>   array (    0 => 'fecha',  ),  1 =>   array (    '_controller' => 'AppBundle\\Controller\\ReporteController::reporteEfectivoDetalladoAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'fecha',    ),    1 =>     array (      0 => 'text',      1 => '/reporte/efectivo',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'reporte-noefectivas' => array (  0 =>   array (    0 => 'fecha',  ),  1 =>   array (    '_controller' => 'AppBundle\\Controller\\ReporteController::ReporteNoEfectivas',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'fecha',    ),    1 =>     array (      0 => 'text',      1 => '/reporte/noefectivas',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'productosvendidosconsolidado' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'AppBundle\\Controller\\ReporteController::ReporteProductosVendidosConsolidado',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/reporte/productosvendidosconsolidado',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'frm-cafeteriacentro' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'AppBundle\\Controller\\ReporteController::ReporteCafeteriaCentro',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/reporte/frmcafeteriacentro',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'reporte-cafeteriacentro' => array (  0 =>   array (    0 => 'fecha',  ),  1 =>   array (    '_controller' => 'AppBundle\\Controller\\ReporteController::reporteCafeteriaCentroAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'fecha',    ),    1 =>     array (      0 => 'text',      1 => '/reporte/cafeteriacentro',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'productosvendidos' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'AppBundle\\Controller\\VentaController::ReporteProductosVendidos',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/venta/productosvendidos',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'consultacuentas' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'AppBundle\\Controller\\VentaController::consultarAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/venta/consultacuentas',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'modificarcuentas' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'AppBundle\\Controller\\VentaController::modificarAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/venta/modificarcuentas',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'reembolsos' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'AppBundle\\Controller\\VentaController::reembolsosAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/venta/reembolsos',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'consultadevouchers' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'AppBundle\\Controller\\VentaController::consultarVoucherAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/venta/consultadevouchers',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'interfaceinventario' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'AppBundle\\Controller\\VentaController::generarInterfaceInventarioAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/venta/interfaceinventario',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'interfaceproductos' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'AppBundle\\Controller\\VentaController::generarInterfaceProductosAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/venta/interfaceproductos',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'login' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'AppBundle\\Controller\\LoginController::loginAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/login',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'login_check' => array (  0 =>   array (  ),  1 =>   array (  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/login_check',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'logout' => array (  0 =>   array (  ),  1 =>   array (  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/logout',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'cuadres-api' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'AppBundle\\Controller\\ApiController::cgetAction',    '_format' => 'json',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/api/cuadres',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'cuadrecajero-api' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'AppBundle\\Controller\\ApiController::cuadreAction',    '_format' => 'json',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/api/cuadrecajero',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'autorizaciones-api' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'AppBundle\\Controller\\ApiController::autorizarAction',    '_format' => 'json',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/api/autorizaciones',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'ediciones-api' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'AppBundle\\Controller\\ApiController::editarAction',    '_format' => 'json',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/api/ediciones',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'inactivaciones-api' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'AppBundle\\Controller\\ApiController::inactivarAction',    '_format' => 'json',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/api/inactivaciones',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'punto-api' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'AppBundle\\Controller\\ApiController::puntosAction',    '_format' => 'json',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/api/punto',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'actualizar-api' => array (  0 =>   array (    0 => 'fecha',  ),  1 =>   array (    '_controller' => 'AppBundle\\Controller\\ApiController::actualizarAction',    '_format' => 'json',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'fecha',    ),    1 =>     array (      0 => 'text',      1 => '/api/actualizaciones',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'productosvendidos-api' => array (  0 =>   array (    0 => 'desde',    1 => 'hasta',  ),  1 =>   array (    '_controller' => 'AppBundle\\Controller\\ApiController::productosVendidosAction',    '_format' => 'json',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'hasta',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'desde',    ),    2 =>     array (      0 => 'text',      1 => '/api/productosvendidos',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'consultacuentas-api' => array (  0 =>   array (    0 => 'fecha',  ),  1 =>   array (    '_controller' => 'AppBundle\\Controller\\ApiController::consultaCuentasAction',    '_format' => 'json',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'fecha',    ),    1 =>     array (      0 => 'text',      1 => '/api/consultacuentas',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'formasdepago-api' => array (  0 =>   array (    0 => 'idSec',  ),  1 =>   array (    '_controller' => 'AppBundle\\Controller\\ApiController::formasPagosByFechaAndCuentaAction',    '_format' => 'json',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'idSec',    ),    1 =>     array (      0 => 'text',      1 => '/api/formasdepago',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'edicionesventas-api' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'AppBundle\\Controller\\ApiController::editarVentaAction',    '_format' => 'json',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/api/edicionesventas',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'cierrescondiferencias-api' => array (  0 =>   array (    0 => 'desde',    1 => 'hasta',  ),  1 =>   array (    '_controller' => 'AppBundle\\Controller\\ApiController::cierresDiferenciasAction',    '_format' => 'json',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'hasta',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'desde',    ),    2 =>     array (      0 => 'text',      1 => '/api/cierrescondiferencias',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'reembolsos-api' => array (  0 =>   array (    0 => 'desde',    1 => 'hasta',  ),  1 =>   array (    '_controller' => 'AppBundle\\Controller\\ApiController::refoundAction',    '_format' => 'json',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'hasta',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'desde',    ),    2 =>     array (      0 => 'text',      1 => '/api/reembolsos',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'productosvendidosconsolidado-api' => array (  0 =>   array (    0 => 'desde',    1 => 'hasta',  ),  1 =>   array (    '_controller' => 'AppBundle\\Controller\\ApiController::productosVendidosConsolidadoAction',    '_format' => 'json',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'hasta',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'desde',    ),    2 =>     array (      0 => 'text',      1 => '/api/productosvendidosconsolidado',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'gethijos-api' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'AppBundle\\Controller\\ApiController::getHijosAction',    '_format' => 'json',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/api/gethijos',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'voucher-subsidioenespeciealoha' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'AppBundle\\Controller\\ApiController::voucherAction',    '_format' => 'json',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/api/listarsubsidiosenespeciealoha',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'voucher-subsidioenespeciebdmuf' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'AppBundle\\Controller\\ApiController::listarSubsidioEnEspecieTbSubEspAction',    '_format' => 'json',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/api/listarsubsidiosenespeciebdmuf',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'voucher-api' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'AppBundle\\Controller\\ApiController::generarReporteFormasDePagoNoEfectivasPDFAction',    '_format' => 'json',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/api/generarInformeTarjetasPdf',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'efectivo-api' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'AppBundle\\Controller\\ApiController::generarReporteFormaDePagoEfectivoPDFAction',    '_format' => 'json',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/api/generarInformeEfectivoPdf',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'voucher-tbsubesp' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'AppBundle\\Controller\\ApiController::getTbsubespAction',    '_format' => 'json',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/api/gettbsubesp',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'cliente-tbsubesp' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'AppBundle\\Controller\\ApiController::getClienteTbsubespAction',    '_format' => 'json',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/api/getclientetbsubesp',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'actualizar-tblGndTndr' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'AppBundle\\Controller\\ApiController::actualizarTblGndTndrAction',    '_format' => 'json',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/api/actualizartblGndTndr',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'inactivar-tbsubesp' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'AppBundle\\Controller\\ApiController::inactivarTbSubEspAction',    '_format' => 'json',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/api/inactivartbsubesp',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'reporte-subsidioenespeciealoha' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'AppBundle\\Controller\\ApiController::reporteSubsidioEnEspecieAlohaAction',    '_format' => 'json',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/api/reportesubsidiosenespeciealoha',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'getcierrebyid' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'AppBundle\\Controller\\ApiController::getCierreByIdAction',    '_format' => 'json',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/api/getcierrebyid',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'entradas-reservas' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'AppBundle\\Controller\\ApiController::getEntradasReservasAction',    '_format' => 'json',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/api/entradasreservas',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'restaurantes-reservas' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'AppBundle\\Controller\\ApiController::getRestaurantesReservasAction',    '_format' => 'json',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/api/restaurantesreservas',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'parqueadero-reservas' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'AppBundle\\Controller\\ApiController::getParqueaderoReservasAction',    '_format' => 'json',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/api/parqueaderoreservas',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'micomfamiliar' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'AppBundle\\Controller\\ApiController::getMicomfamiliarAction',    '_format' => 'json',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/api/micomfamiliar',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'micomfamiliar-consecutivo' => array (  0 =>   array (    0 => 'consecutivo',  ),  1 =>   array (    '_controller' => 'AppBundle\\Controller\\ApiController::getMicomfamiliarConsecutivoAction',    '_format' => 'json',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'consecutivo',    ),    1 =>     array (      0 => 'text',      1 => '/api/micomfamiliar',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
    ];
        }
    }

    public function generate($name, $parameters = [], $referenceType = self::ABSOLUTE_PATH)
    {
        if (!isset(self::$declaredRoutes[$name])) {
            throw new RouteNotFoundException(sprintf('Unable to generate a URL for the named route "%s" as such route does not exist.', $name));
        }

        list($variables, $defaults, $requirements, $tokens, $hostTokens, $requiredSchemes) = self::$declaredRoutes[$name];

        return $this->doGenerate($variables, $defaults, $requirements, $tokens, $parameters, $name, $referenceType, $hostTokens, $requiredSchemes);
    }
}
